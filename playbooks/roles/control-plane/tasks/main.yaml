- name: 이미 쿠버네티스 클러스터가 구성되어 있는지 확인
  stat:
    path: "{{ kube_config_dir }}/kubelet.conf"
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: kubelet_conf

- name: 이미 join 된 컨트롤 플레인 확인 및 first_kube_control_plane 변수 설정
  import_tasks: define-first-kube-control.yaml
  when: kubelet_conf.stat.exists == True

- name: 부트스트랩 토큰 재발급
  shell: >-
    {{ bin_dir }}/kubeadm --kubeconfig {{ kube_config_dir }}/admin.conf token delete {{ bootstrap_token }} || :;
    {{ bin_dir }}/kubeadm --kubeconfig {{ kube_config_dir }}/admin.conf token create {{ bootstrap_token }} --ttl 5m
  changed_when: false
  when:
    - inventory_hostname == first_kube_control_plane

- name: kubeadm config 파일 복사
  copy:
    src: "../../../configs/utm/master.yaml"
    dest: "/tmp/kubeadm-config.yaml"
    mode: 0644
  when: kubelet_conf.stat.exists == False
- debug: var=ansible_env.PATH

# kubelet 서비스 임시 중지
- name: kubelet 서비스 임시 중지
  service:
    name: kubelet
    state: stopped
    enabled: yes
  when: kubelet_conf.stat.exists == False

- name: kubeadm init 실행
  command: "/usr/local/bin/kubeadm init --upload-certs --config /tmp/kubeadm-config.yaml"
  register: kubeadm_init_result
  environment: 
    PATH: "{{ bin_dir }}:{{ ansible_env.PATH }}"
  when: kubelet_conf.stat.exists == False

- name: kube config 디렉터리 생성
  file:
    path: "{{ ansible_env.HOME | default('/root') }}/.kube"
    mode: "0700"
    state: directory

- name: admin kube config 복사
  copy:
    src: "{{ kube_config_dir }}/admin.conf"
    dest: "{{ ansible_env.HOME | default('/root') }}/.kube/config"
    remote_src: yes
    mode: "0600"
    backup: yes
